{"version":3,"sources":["lib/layout/LoginPageview.jsx","components/login/core/FormHandler.js","components/login/core/LoginRequst.js","components/login/Login.jsx"],"names":["Pageview","children","rest","className","Handler","useState","value","error","helperText","email","setEmail","showPassword","password","setPassword","e","target","util","isEmail","event","preventDefault","prop","Request","history","useHistory","useReducer","reducer","init","state","dispatch","mutate","useMutation","login","onMutate","type","onError","message","onSuccess","data","setItem","auth","push","reason","Login","formHandler","handleEmailChange","mouseDown","handlePasword","loginRequest","handleSubmit","handleClose","src","Logo","alt","Input","label","name","onChange","FormControl","onClick","onMouseDown","Button","loading","Alert","open","msg","onClose"],"mappings":"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","file":"static/js/16.abbde138.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Pageview({ children, ...rest }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"offset-md-4 col-md-4\">\r\n          <div {...rest}>{children}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pageview;\r\n","import { useState } from 'react';\r\nimport util from '../../../lib/service/util';\r\n\r\nfunction Handler() {\r\n  const [email, setEmail] = useState({\r\n    value: '',\r\n    error: false,\r\n    helperText: '',\r\n  });\r\n\r\n  const handleEmailChange = (e) => {\r\n    const value = e.target.value;\r\n\r\n    if (util.isEmail(value)) {\r\n      setEmail({\r\n        value: value,\r\n        error: false,\r\n        helperText: '',\r\n      });\r\n    } else {\r\n      if (value === '') {\r\n        setEmail({\r\n          value: value,\r\n          helperText: 'This field is required',\r\n          error: true,\r\n        });\r\n      } else {\r\n        setEmail({\r\n          value: value,\r\n          helperText: 'Email is invalid',\r\n          error: true,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // Password Start Here\r\n  const [password, setPassword] = useState({\r\n    value: '',\r\n    error: false,\r\n    helperText: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const showPassword = () => {\r\n    setPassword({ ...password, showPassword: !password.showPassword });\r\n  };\r\n\r\n  const mouseDown = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handlePasword = (prop) => (event) => {\r\n    const value = event.target.value;\r\n    setPassword({ ...password, [prop]: value });\r\n\r\n    if (value !== '') {\r\n      setPassword({\r\n        ...password,\r\n        value: value,\r\n        error: false,\r\n        helperText: '',\r\n      });\r\n    } else {\r\n      setPassword({\r\n        ...password,\r\n        helperText: 'This field is required',\r\n        error: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return [email, handleEmailChange, password, showPassword, mouseDown, handlePasword];\r\n}\r\n\r\nexport default Handler;\r\n","import { useReducer } from 'react';\r\nimport { useMutation } from 'react-query';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { login } from '../../../lib/http/admin';\r\nimport { init, reducer } from '../../../lib/reducer/post';\r\nimport * as type from '../../../lib/reducer/action-type';\r\nimport auth from '../../../lib/config/auth';\r\nimport util from '../../../lib/service/util';\r\n\r\nfunction Request(email, password) {\r\n  // Close alert\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch({ type: type.CLOSE_ALERT });\r\n  };\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const history = useHistory();\r\n  const [state, dispatch] = useReducer(reducer, init);\r\n\r\n  const { mutate } = useMutation(login, {\r\n    onMutate: () => {\r\n      dispatch({ type: type.LOADING });\r\n    },\r\n    onError: (error) => {\r\n      dispatch({ type: type.ERROR, message: error });\r\n    },\r\n    onSuccess: (data) => {\r\n      dispatch({ type: type.SUCCESS, message: data });\r\n      util.setItem('admin', data.data.data, true);\r\n      auth.login(() => {\r\n        history.push('/dashboard');\r\n      });\r\n    },\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    if (email === '' || password === '') {\r\n      dispatch({ type: type.VALIDATE, message: 'All fields are required' });\r\n      return;\r\n    }\r\n\r\n    if (!util.isEmail(email)) {\r\n      dispatch({ type: type.VALIDATE, message: 'Invalid email address' });\r\n      return;\r\n    }\r\n\r\n    const params = { email, password };\r\n    mutate(params);\r\n  };\r\n\r\n  return [state, handleSubmit, handleClose];\r\n}\r\n\r\nexport default Request;\r\n","import React from 'react';\r\nimport Pageview from '../../lib/layout/LoginPageview';\r\nimport Input from '../../lib/control//Input';\r\nimport FormControl from '../../lib/control/FormControl';\r\nimport Alert from '../../lib/control/Alert';\r\nimport Button from '../../lib/control//Button';\r\n\r\nimport formHandler from './core/FormHandler';\r\nimport loginRequest from './core/LoginRequst';\r\n\r\nimport '../../lib/style/login.scss';\r\nimport Logo from '../../lib/assets/logo.png';\r\n\r\nfunction Login() {\r\n  const [email, handleEmailChange, password, showPassword, mouseDown, handlePasword] =\r\n    formHandler();\r\n\r\n  const [state, handleSubmit, handleClose] = loginRequest(email.value, password.value);\r\n\r\n  return (\r\n    <Pageview className=\"login\">\r\n      <img src={Logo} alt=\"App Logo\" />\r\n      <h5 className=\"h5 text-center\">Admin Login</h5>\r\n      <h6 className=\"h6 mb-5  text-center\">Use your email and password to login.</h6>\r\n\r\n      <Input\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        value={email.value}\r\n        type=\"email\"\r\n        onChange={handleEmailChange}\r\n        error={email.error}\r\n        helperText={email.helperText}\r\n      />\r\n\r\n      <FormControl\r\n        label=\"Password\"\r\n        type={password.showPassword}\r\n        value={password.password}\r\n        onChange={handlePasword('password')}\r\n        error={password.error}\r\n        helperText={password.helperText}\r\n        onClick={showPassword}\r\n        onMouseDown={mouseDown}\r\n      />\r\n\r\n      <div className=\"text-center\">\r\n        <Button\r\n          label=\"Login\"\r\n          className=\"btn btn-warning btn-block\"\r\n          onClick={handleSubmit}\r\n          loading={state.loading}\r\n        />\r\n      </div>\r\n      <Alert open={state.open} msg={state.message} onClose={handleClose} />\r\n    </Pageview>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}