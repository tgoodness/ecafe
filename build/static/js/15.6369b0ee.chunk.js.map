{"version":3,"sources":["lib/control/Select.jsx","../node_modules/@material-ui/icons/esm/CheckOutlined.js","../node_modules/@material-ui/icons/esm/ClearOutlined.js","../node_modules/@material-ui/icons/esm/AddOutlined.js","components/sub-admins/add-admin/core/FormHandler.js","components/sub-admins/add-admin/core/AddAdmin.js","components/sub-admins/add-admin/AddAdmin.jsx","components/sub-admins/add-admin/core/ModalHandler.js","components/sub-admins/core/SearchLogic.js","components/sub-admins/SubAdmins.jsx"],"names":["SimpleSelect","prob","name","label","value","error","onChange","helperText","items","rest","variant","className","id","labelId","map","item","util","randomNumber","createSvgIcon","React","d","Handler","useState","email","setEmail","role","setRole","e","target","isEmail","Request","handleCancel","useReducer","reducer","init","state","dispatch","queryClient","useQueryClient","mutate","useMutation","addAdmin","onMutate","type","onError","message","onSuccess","data","invalidateQueries","event","reason","AddAdmin","props","visible","formHandler","handleEmail","handleRole","addRequest","handleSubmit","handleClose","title","onCancel","footer","centered","maskClosable","destroyOnClose","Input","Select","Button","loading","onClick","Alert","open","msg","onClose","ModalHandler","setIsModalVisible","SearchLogic","inputRef","useRef","searchTerm","setSearchTerm","searchResults","setSearchResults","current","focus","result","filter","o","sn","toString","includes","username","toLowerCase","phoneNumber","SubAdmin","useQuery","admins","status","payload","undefined","profiles","index","key","registrationId","enabled","isLocked","push","searchLogic","handleSearch","columns","dataIndex","sorter","compare","a","b","render","text","record","to","v1","v2","feeInDollar","ClearOutlined","CheckOutlined","RightOutlined","src","modalHandler","showModal","Pageview","SearchOutlined","ref","placeholder","AddOutlined","dataSource"],"mappings":"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","file":"static/js/15.6369b0ee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport util from '../service/util';\r\nexport default function SimpleSelect(prob) {\r\n  const { name, label, value, error = null, onChange, helperText, items, ...rest } = prob;\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\" className=\"text-field\">\r\n      <InputLabel id=\"demo-simple-select-outlined-label\">{label}</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-outlined-label\"\r\n        id=\"demo-simple-select-outlined\"\r\n        value={value}\r\n        onChange={onChange}\r\n        name={name}\r\n        label={label}\r\n        {...(error && { error: true })}\r\n        {...rest}\r\n      >\r\n        {items.map((item) => {\r\n          return (\r\n            <MenuItem key={util.randomNumber() + item} value={item}>\r\n              {item}\r\n            </MenuItem>\r\n          );\r\n        })}\r\n      </Select>\r\n\r\n      <FormHelperText>{helperText}</FormHelperText>\r\n    </FormControl>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\"\n}), 'CheckOutlined');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'ClearOutlined');","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddOutlined');","import { useState } from 'react';\r\nimport util from '../../../../lib/service/util';\r\n\r\nfunction Handler() {\r\n  const [email, setEmail] = useState({\r\n    value: '',\r\n    error: false,\r\n    helperText: '',\r\n  });\r\n\r\n  const handleEmail = (e) => {\r\n    const value = e.target.value;\r\n\r\n    if (util.isEmail(value)) {\r\n      setEmail({\r\n        value: value,\r\n        error: false,\r\n        helperText: '',\r\n      });\r\n    } else {\r\n      if (value === '') {\r\n        setEmail({\r\n          value: value,\r\n          helperText: 'This field is required',\r\n          error: true,\r\n        });\r\n      } else {\r\n        setEmail({\r\n          value: value,\r\n          helperText: 'Email is invalid',\r\n          error: true,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const [role, setRole] = useState({\r\n    value: '',\r\n    error: false,\r\n    helperText: '',\r\n  });\r\n\r\n  const handleRole = (e) => {\r\n    const value = e.target.value;\r\n\r\n    if (value !== '') {\r\n      setRole({\r\n        value: value,\r\n        error: false,\r\n        helperText: '',\r\n      });\r\n    } else {\r\n      setRole({\r\n        value: value,\r\n        helperText: 'This field is required',\r\n        error: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  return [email, handleEmail, role, handleRole];\r\n}\r\n\r\nexport default Handler;\r\n","import { useReducer } from 'react';\r\nimport { useMutation, useQueryClient } from 'react-query';\r\n\r\nimport { addAdmin } from '../../../../lib/http/admin';\r\nimport { init, reducer } from '../../../../lib/reducer/post';\r\nimport * as type from '../../../../lib/reducer/action-type';\r\nimport util from '../../../../lib/service/util';\r\n\r\nfunction Request(email, role, handleCancel) {\r\n  // Close alert\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch({ type: type.CLOSE_ALERT });\r\n  };\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [state, dispatch] = useReducer(reducer, init);\r\n\r\n  const queryClient = useQueryClient();\r\n  const { mutate } = useMutation(addAdmin, {\r\n    onMutate: () => {\r\n      dispatch({ type: type.LOADING });\r\n    },\r\n    onError: (error) => {\r\n      dispatch({ type: type.ERROR, message: error });\r\n    },\r\n    onSuccess: (data) => {\r\n      queryClient.invalidateQueries('admins');\r\n      dispatch({ type: type.SUCCESS, message: data });\r\n      handleCancel();\r\n    },\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    if (email === '' || role === '') {\r\n      dispatch({ type: type.VALIDATE, message: 'All fields are required' });\r\n      return;\r\n    }\r\n\r\n    if (!util.isEmail(email)) {\r\n      dispatch({ type: type.VALIDATE, message: 'Invalid email address' });\r\n      return;\r\n    }\r\n\r\n    const params = { email, role };\r\n    mutate(params);\r\n  };\r\n\r\n  return [state, handleSubmit, handleClose];\r\n}\r\n\r\nexport default Request;\r\n","import React from 'react';\r\nimport { Modal } from 'antd';\r\n\r\nimport Input from '../../../lib/control/Input';\r\nimport Alert from '../../../lib/control/Alert';\r\nimport Select from '../../../lib/control/Select';\r\nimport Button from '../../../lib/control/Button';\r\nimport formHandler from './core/FormHandler';\r\nimport addRequest from './core/AddAdmin';\r\n\r\nfunction AddAdmin(props) {\r\n  const { visible, handleCancel } = props;\r\n  const [email, handleEmail, role, handleRole] = formHandler();\r\n  const [state, handleSubmit, handleClose] = addRequest(email.value, role.value, handleCancel);\r\n\r\n  return (\r\n    <Modal\r\n      title=\"Add Admin\"\r\n      visible={visible}\r\n      onCancel={handleCancel}\r\n      footer={false}\r\n      centered={true}\r\n      maskClosable={false}\r\n      className=\"add-admin\"\r\n      destroyOnClose={true}\r\n    >\r\n      <Input\r\n        label=\"Email Address\"\r\n        value={email.value}\r\n        type=\"email\"\r\n        onChange={handleEmail}\r\n        error={email.error}\r\n        helperText={email.helperText}\r\n      />\r\n\r\n      <Select\r\n        label=\"Roles\"\r\n        value={role.value}\r\n        onChange={handleRole}\r\n        error={role.error}\r\n        helperText={role.helperText}\r\n        items={['Customer Service', 'Super Service', 'Principal']}\r\n      />\r\n\r\n      <div className=\"mt-3\">\r\n        <Button\r\n          loading={state.loading}\r\n          onClick={handleSubmit}\r\n          className=\"btn btn-warning btn-block\"\r\n          label=\"Add Now\"\r\n        />\r\n      </div>\r\n\r\n      <Alert open={state.open} msg={state.message} onClose={handleClose} />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default AddAdmin;\r\n","import { useState } from 'react';\r\n\r\nfunction ModalHandler() {\r\n  const [visible, setIsModalVisible] = useState(false);\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n  return [visible, showModal, handleCancel];\r\n}\r\n\r\nexport default ModalHandler;\r\n","import { useState, useRef } from 'react';\r\n\r\nfunction SearchLogic(data) {\r\n  const inputRef = useRef(null);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    if (searchTerm === '') {\r\n      inputRef.current.focus();\r\n    }\r\n\r\n    const result = data.filter(\r\n      (o) =>\r\n        o.sn.toString().includes(searchTerm.toString()) ||\r\n        o.username.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        o.role.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        o.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        o.phoneNumber.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setSearchResults(result);\r\n  };\r\n\r\n  return [searchTerm, handleSearch, inputRef, searchResults];\r\n}\r\n\r\nexport default SearchLogic;\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/display-name */\r\nimport React from 'react';\r\nimport { AddOutlined, CheckOutlined, ClearOutlined, SearchOutlined } from '@material-ui/icons';\r\nimport { Table } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { RightOutlined } from '@ant-design/icons';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport Pageview from '../../lib/layout/Pageview';\r\nimport { ErrorPage } from '../../lib/control/error-page/FallBack';\r\nimport AddAdmin from './add-admin/AddAdmin';\r\nimport modalHandler from './add-admin/core/ModalHandler';\r\nimport searchLogic from './core/SearchLogic';\r\n\r\nimport { admins } from '../../lib/http/admin';\r\nimport '../../lib/style/shared-history.scss';\r\n\r\nfunction SubAdmin() {\r\n  const { status, error, data } = useQuery('admins', admins);\r\n  let payload = [];\r\n  if (data !== undefined) {\r\n    data.data.data.profiles.map((item, index) => {\r\n      const value = {\r\n        key: item.registrationId,\r\n        sn: index + 1,\r\n        username: item.username === null ? '---' : item.username,\r\n        email: item.email,\r\n        role: item.role,\r\n        phoneNumber: item.phoneNumber === null ? '---' : item.phoneNumber,\r\n        enabled: item.isLocked,\r\n      };\r\n      payload.push(value);\r\n    });\r\n  }\r\n\r\n  const [searchTerm, handleSearch, inputRef, searchResults] = searchLogic(payload);\r\n  const columns = [\r\n    {\r\n      title: 'SN',\r\n      dataIndex: 'sn',\r\n      key: 'sn',\r\n      sorter: {\r\n        compare: (a, b) => a.sn - b.sn,\r\n      },\r\n    },\r\n\r\n    {\r\n      title: 'Username',\r\n      dataIndex: 'username',\r\n      key: 'username',\r\n      render: (text, record) =>\r\n        text === '---' ? (\r\n          '---'\r\n        ) : (\r\n          <Link to={`/sub-admin/${record.registrationId}`} className=\"text-info\">\r\n            {text}\r\n          </Link>\r\n        ),\r\n      sorter: (a, b) => {\r\n        var v1 = a.username;\r\n        var v2 = b.username;\r\n        if (v1 < v2) {\r\n          return -1;\r\n        }\r\n        if (v1 > v2) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n      sorter: (a, b) => {\r\n        var v1 = a.email;\r\n        var v2 = b.email;\r\n        if (v1 < v2) {\r\n          return -1;\r\n        }\r\n        if (v1 > v2) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: 'Role',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      sorter: (a, b) => {\r\n        var v1 = a.role;\r\n        var v2 = b.role;\r\n        if (v1 < v2) {\r\n          return -1;\r\n        }\r\n        if (v1 > v2) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: 'PhoneNumber',\r\n      dataIndex: 'phoneNumber',\r\n      key: 'phoneNumber',\r\n      sorter: (a, b) => {\r\n        var v1 = a.feeInDollar;\r\n        var v2 = b.feeInDollar;\r\n        if (v1 < v2) {\r\n          return -1;\r\n        }\r\n        if (v1 > v2) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      },\r\n    },\r\n\r\n    {\r\n      title: 'Enabled',\r\n      dataIndex: 'enabled',\r\n      key: 'enabled',\r\n      render: (text) =>\r\n        text ? (\r\n          <ClearOutlined className=\"text-danger\" />\r\n        ) : (\r\n          <CheckOutlined className=\"text-success\" />\r\n        ),\r\n    },\r\n\r\n    {\r\n      title: 'More',\r\n      dataIndex: 'key',\r\n      key: 'key',\r\n      render: (text) => (\r\n        <Link to={`/sub-admin/${text}`} className=\"text-info\">\r\n          <RightOutlined />\r\n        </Link>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const src = searchTerm === '' ? payload : searchResults;\r\n  const [visible, showModal, handleCancel] = modalHandler();\r\n\r\n  if (status !== 'success') {\r\n    return <ErrorPage status={status} error={error} data={data} title=\"Admins\" />;\r\n  }\r\n\r\n  return (\r\n    <Pageview title=\"Admins\">\r\n      <div className=\"row shared-history\">\r\n        <div className=\"offset-md-2 col-md-8\">\r\n          <div className=\"search-parent-wrapper\">\r\n            <div className=\"search-wrapper\" data-aos=\"fade-down\">\r\n              <SearchOutlined />\r\n              <input\r\n                type=\"text\"\r\n                ref={inputRef}\r\n                value={searchTerm}\r\n                onChange={handleSearch}\r\n                placeholder=\"Search\"\r\n              />\r\n            </div>\r\n            <div className=\"add-icon\" onClick={showModal}>\r\n              <AddOutlined />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-responsive\">\r\n            <Table columns={columns} dataSource={src} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <AddAdmin visible={visible} handleCancel={handleCancel} />\r\n    </Pageview>\r\n  );\r\n}\r\n\r\nexport default SubAdmin;\r\n"],"sourceRoot":""}