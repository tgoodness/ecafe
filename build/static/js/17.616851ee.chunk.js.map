{"version":3,"sources":["../node_modules/@material-ui/icons/esm/AddAPhotoOutlined.js","components/profile/core/LogicHandler.js","components/profile/core/UpdateRequst.js","components/profile/Profile.jsx"],"names":["createSvgIcon","React","d","LogiHandler","global","Success","admin","GetAdmin","useState","preview","emptyImage","raw","image","setImage","onLoaded","ADMIN_IMG_URL","e","preventDefault","reader","FileReader","file","target","files","onloadend","result","readAsDataURL","Request","_username","useRef","_firstName","_lastName","_phoneNumber","history","useHistory","useReducer","reducer","init","state","dispatch","mutate","useMutation","updateProfile","onMutate","type","onError","error","message","onSuccess","data","setTimeout","push","username","current","value","firstName","lastName","phoneNumber","util","isPhoneNumber","registrationId","misc","params","undefined","name","event","reason","Profile","logicHandler","handleImage","profile","updateRequest","handleSubmit","handleClose","Pageview","title","className","AddAPhotoOutlined","src","alt","width","onLoad","onChange","Input","label","role","disabled","inputRef","defaultValue","email","Button","loading","onClick","Alert","open","msg","onClose"],"mappings":"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","file":"static/js/17.616851ee.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21 6h-3.17L16 4h-6v2h5.12l1.83 2H21v12H5v-9H3v9c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zM8 14c0 2.76 2.24 5 5 5s5-2.24 5-5-2.24-5-5-5-5 2.24-5 5zm5-3c1.65 0 3 1.35 3 3s-1.35 3-3 3-3-1.35-3-3 1.35-3 3-3zM5 6h3V4H5V1H3v3H0v2h3v3h2z\"\n}), 'AddAPhotoOutlined');","import { useState } from 'react';\r\nimport global from '../../../lib/service/global';\r\nimport { ADMIN_IMG_URL } from '../../../lib/http/url';\r\nimport emptyImage from '../../../lib/assets/empty-photo.png';\r\n\r\nfunction LogiHandler() {\r\n  const { Success, GetAdmin } = global();\r\n  const admin = GetAdmin();\r\n\r\n  //Uplaod file\r\n  const [image, setImage] = useState({\r\n    preview: emptyImage,\r\n    raw: '',\r\n  });\r\n\r\n  const handleImage = (e) => {\r\n    e.preventDefault();\r\n\r\n    let reader = new FileReader();\r\n    let file = e.target.files[0];\r\n\r\n    reader.onloadend = () => {\r\n      setImage({\r\n        raw: file,\r\n        preview: reader.result,\r\n      });\r\n    };\r\n\r\n    if (file) {\r\n      onLoaded(reader.result);\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const onLoaded = () => {\r\n    if (Success()) {\r\n      if (admin.image) setImage({ ...image, preview: `${ADMIN_IMG_URL}${admin.image}` });\r\n    }\r\n  };\r\n\r\n  return [image, handleImage, onLoaded];\r\n}\r\n\r\nexport default LogiHandler;\r\n","import { useReducer, useRef } from 'react';\r\nimport { useMutation } from 'react-query';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { updateProfile } from '../../../lib/http/admin';\r\nimport { init, reducer } from '../../../lib/reducer/post';\r\nimport * as type from '../../../lib/reducer/action-type';\r\nimport util from '../../../lib/service/util';\r\nimport misc from '../../../lib/service/misc';\r\n\r\nfunction Request(image) {\r\n  // Close alert\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    dispatch({ type: type.CLOSE_ALERT });\r\n  };\r\n\r\n  const _username = useRef(null);\r\n  const _firstName = useRef(null);\r\n  const _lastName = useRef(null);\r\n  const _phoneNumber = useRef(null);\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  const history = useHistory();\r\n  const [state, dispatch] = useReducer(reducer, init);\r\n\r\n  const { mutate } = useMutation(updateProfile, {\r\n    onMutate: () => {\r\n      dispatch({ type: type.LOADING });\r\n    },\r\n    onError: (error) => {\r\n      dispatch({ type: type.ERROR, message: error });\r\n    },\r\n    onSuccess: (data) => {\r\n      dispatch({ type: type.SUCCESS, message: data });\r\n      setTimeout(() => {\r\n        history.push('/');\r\n        history.push('/profile');\r\n      }, 2000);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    const username = _username.current.value;\r\n    const firstName = _firstName.current.value;\r\n    const lastName = _lastName.current.value;\r\n    const phoneNumber = _phoneNumber.current.value;\r\n\r\n    if (username === '' || firstName === '' || lastName === '' || phoneNumber === '') {\r\n      dispatch({ type: type.VALIDATE, message: 'All fields are required' });\r\n      return;\r\n    }\r\n\r\n    if (!util.isPhoneNumber(phoneNumber)) {\r\n      dispatch({ type: type.VALIDATE, message: 'Invalid Phone Number' });\r\n      return;\r\n    }\r\n\r\n    const registrationId = misc.registrationId();\r\n    let params = {};\r\n    if (image.name === undefined) {\r\n      params = { username, firstName, lastName, phoneNumber, registrationId };\r\n    } else {\r\n      params = { image, username, firstName, lastName, phoneNumber, registrationId };\r\n    }\r\n\r\n    mutate(params);\r\n  };\r\n\r\n  return [_username, _firstName, _lastName, _phoneNumber, state, handleSubmit, handleClose];\r\n}\r\n\r\nexport default Request;\r\n","import React from 'react';\r\nimport { AddAPhotoOutlined } from '@material-ui/icons';\r\n\r\nimport Pageview from '../../lib/layout/Pageview';\r\nimport Skeleton from '../../lib/skeleton/Dashboard';\r\nimport Input from '../../lib/control/Input';\r\nimport Button from '../../lib/control/Button';\r\nimport Alert from '../../lib/control/Alert';\r\n\r\nimport logicHandler from './core/LogicHandler';\r\nimport updateRequest from './core/UpdateRequst';\r\nimport global from '../../lib/service/global';\r\nimport '../../lib/style/profile.scss';\r\n\r\nfunction Profile() {\r\n  const [image, handleImage, onLoaded] = logicHandler();\r\n  const { Success, GetAdmin } = global();\r\n  const profile = GetAdmin();\r\n\r\n  const [username, firstName, lastName, phoneNumber, state, handleSubmit, handleClose] =\r\n    updateRequest(image.raw);\r\n\r\n  return (\r\n    <Pageview title=\"Profile\">\r\n      {Success() ? (\r\n        <div className=\"row profile\">\r\n          <div className=\"offset-md-3 col-md-6\">\r\n            <div className=\"image-wrapper\">\r\n              <label>\r\n                <div className=\"mask-icon\">\r\n                  <AddAPhotoOutlined />\r\n                </div>\r\n                <img\r\n                  src={image.preview}\r\n                  alt=\"User Picture\"\r\n                  width={100}\r\n                  {...(image.raw === '' && { onLoad: onLoaded })}\r\n                />\r\n                <input type=\"file\" className=\"d-none\" onChange={handleImage} />\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"row \">\r\n              <div className=\"col-md-6\">\r\n                <Input label=\"Role\" value={profile.role} disabled={true} />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <Input label=\"Username\" inputRef={username} defaultValue={profile.username} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-md-6\">\r\n                <Input label=\"First Name\" inputRef={firstName} defaultValue={profile.firstName} />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <Input label=\"Last Name\" inputRef={lastName} defaultValue={profile.lastName} />\r\n              </div>\r\n            </div>\r\n            \r\n            <Input label=\"Email\" type=\"email\" value={profile.email} />\r\n            <Input\r\n              label=\"Phone Number\"\r\n              type=\"number\"\r\n              inputRef={phoneNumber}\r\n              defaultValue={profile.phoneNumber}\r\n            />\r\n\r\n            <Button\r\n              label=\"Update\"\r\n              className=\"btn btn-warning btn-block\"\r\n              loading={state.loading}\r\n              onClick={handleSubmit}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Skeleton />\r\n      )}\r\n\r\n      <Alert open={state.open} msg={state.message} onClose={handleClose} />\r\n    </Pageview>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}